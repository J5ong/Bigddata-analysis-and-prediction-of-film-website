import sys
import numpy as np

w = np.array([[ 4.15458798e-01, 3.01396549e-01, 3.73823941e-01, -6.53726086e-02
, -4.50500578e-01, 5.21464467e-01],
 [ 8.93742859e-01, 1.65167361e-01, 3.44464779e-01, -3.01536977e-01
, -6.90818250e-01, 6.95988461e-02],
 [ 4.51726079e-01, 2.90788710e-01, 7.25919962e-01, -2.11259022e-01
, -7.18204677e-01, 5.47898114e-01],
 [ 3.66026580e-01, 7.72616506e-01, 1.00052643e+00, -6.23495616e-02
, -4.55598608e-02, 6.82553589e-01],
 [-2.38574073e-02, 8.40461552e-01, 8.53993177e-01, -3.23911309e-01
, -2.00667873e-01, 8.81320179e-01],
 [ 4.47862029e-01, 2.17757031e-01, 2.93808788e-01, -7.51140714e-02
, -2.92262018e-01, 2.09025949e-01],
 [ 7.90641725e-01, 1.88811757e-02, -5.92884189e-03, -4.74717289e-01
, -8.76807570e-01, -1.11279562e-01],
 [ 4.22176644e-02, -9.22613516e-02, -3.42639774e-01, -4.61179733e-01
, -7.85770267e-02, -1.11088440e-01],
 [-6.81244433e-02, 2.37657905e-01, 3.07017237e-01, -2.80884832e-01
,  3.88557255e-01, 3.73628914e-01],
 [-1.06210541e-02, 7.29414761e-01, 4.07716811e-01, -1.37762225e+00
, -3.00961852e-01, 5.61324775e-01],
 [ 1.97821662e-01, 2.88130313e-01, 4.18827295e-01, -2.12445721e-01
,  4.00440782e-01, 4.11502302e-01],
 [ 1.57488897e-01, 1.29381895e-01, 2.82863051e-01, -2.83924285e-02
,  2.17536658e-01, 2.43763849e-01],
 [-3.97575162e-02, 2.19798848e-01, 4.03245896e-01, -9.20313895e-01
, -4.67315167e-01, 3.42753172e-01],
 [-4.93079245e-01, 2.02364013e-01, 2.08898813e-01, -2.01698279e+00
, -4.93357748e-01, -1.51857175e-03],
 [-4.35629427e-01, -4.01290625e-01, -3.62721354e-01, 1.18391968e-01
,  4.15734619e-01, -5.86024880e-01],
 [ 1.00522965e-01, 1.40073165e-01, 1.67764276e-01, -2.93171685e-02
, -4.08996902e-02, -9.90228653e-02]])

w2 = np.array([[-1.6882066,   0.47489944],
 [ 0.42816263,  0.00860367],
 [ 0.5037191,  -0.01049034],
 [-1.076205,    1.407239  ],
 [-1.2229716,   0.17215694],
 [ 0.3342695,   0.04080376]])

b = np.array([0.71558964, 0.76324475, 0.69047827, 0.09089553, 0.11398937, 0.63113093])
b2 = np.array([ 0.6437256,  -0.09472246])

ow = np.array([[ 0.44460452],
 [-0.11841042]])

date_mean, date_std, area_mean, area_std = 2221.3321332133214, 4093.9047956779364, 67.82088208820882, 45.21772509364715
bo_std, bo_mean = 48274.23759157557, 19149.232943294337
bo1_std, bo1_mean = 5391.409392378011, 2476.326165616563
bo2_std, bo2_mean = 5380.770339402681, 2587.221998199818
bo3_std, bo3_mean = 4863.633876697543, 2279.30509450945
bo4_std, bo4_mean = 3889.465944323492, 1441.1672457245716
bo5_std, bo5_mean = 3181.146315043701, 1184.8495589558966
bo6_std, bo6_mean = 2892.1985769322373, 1025.665922592258
bo7_std, bo7_mean = 2705.25223737058, 898.6263456345641

x = [[0.248,0.235,0.192,0.109,0.088,0.074,0.068,(24762.29-bo1_mean)/bo1_std,(24128.54-bo2_mean)/bo2_std,(18644.08-bo3_mean)/bo3_std,(9093.91-bo4_mean)/bo4_std,(7179.32-bo5_mean)/bo5_std,(6013.44-bo6_mean)/bo6_std,(5210.46-bo7_mean)/bo7_std,(101-date_mean)/date_std,(10-area_mean)/area_std]]

def normalize(item, mean, std):
	return ((item - mean) / std)

def relu(mat):
	return np.maximum(mat, np.zeros(mat.shape))

def model(x, w, b, ow):
	layer1 = relu(np.matmul(x, w) + b)
	layer2 = relu(np.matmul(layer1, w2) + b2)
	return np.matmul(layer2, ow)

# if __name__ == '__main__':
# 	x = [[float(item) for item in sys.argv[1:17]]]
# 	x[0][7] = normalize(x[0][7], bo1_mean, bo1_std)
# 	x[0][8] = normalize(x[0][8], bo2_mean, bo2_std)
# 	x[0][9] = normalize(x[0][9], bo3_mean, bo3_std)
# 	x[0][10] = normalize(x[0][10], bo4_mean, bo4_std)
# 	x[0][11] = normalize(x[0][11], bo5_mean, bo5_std)
# 	x[0][12] = normalize(x[0][12], bo6_mean, bo6_std)
# 	x[0][13] = normalize(x[0][13], bo7_mean, bo7_std)
# 	x[0][14] = normalize(x[0][14], date_mean, date_std)
# 	x[0][15] = normalize(x[0][15], area_mean, area_std)
# 	print((model(x, w, b, ow) * bo_std + bo_mean)[0][0])

def run_sim(args):
	x = [[float(item) for item in args[0:16]]]
	x[0][7] = normalize(x[0][7], bo1_mean, bo1_std)
	x[0][8] = normalize(x[0][8], bo2_mean, bo2_std)
	x[0][9] = normalize(x[0][9], bo3_mean, bo3_std)
	x[0][10] = normalize(x[0][10], bo4_mean, bo4_std)
	x[0][11] = normalize(x[0][11], bo5_mean, bo5_std)
	x[0][12] = normalize(x[0][12], bo6_mean, bo6_std)
	x[0][13] = normalize(x[0][13], bo7_mean, bo7_std)
	x[0][14] = normalize(x[0][14], date_mean, date_std)
	x[0][15] = normalize(x[0][15], area_mean, area_std)

	return str(round((model(x, w, b, ow) * bo_std + bo_mean)[0][0], 5))

# if __name__ == '__main__':
# 	args = [0.248,0.235,0.192,0.109,0.088,0.074,0.068,24762.29,24128.54,18644.08,9093.91,7179.32,6013.44,5210.46,101,10]
# 	result = run_sim(args)
# 	print(result)
